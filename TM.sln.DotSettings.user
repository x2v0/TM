<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeEditing/Intellisense/CodeCompletion/IntelliSenseCompletingCharacters/CSharpCompletingCharacters/UpgradedFromVSSettings/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeEditing/Localization/LocalizationOptions/ResourceNameTemplate/@EntryValue">$Value$</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=CompareOfFloatsByEqualityOperator/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=InconsistentNaming/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=StyleCop_002ESA1126/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=StyleCop_002ESA1200/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=StyleCop_002ESA1300/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=StyleCop_002ESA1634/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=StyleCop_002ESA1650/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=UnusedVariable/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/RecentlyUsedProfile/@EntryValue">Built-in: Full Cleanup</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue">Default: Full Cleanup</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CommonFormatter/USE_INDENTS_FROM_MAIN_LANGUAGE_IN_FILE/@EntryValue">False</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_FUNCTION_DECLARATION/@EntryValue">1</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/CASE_BLOCK_BRACES/@EntryValue">NEXT_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_CASE_FROM_SWITCH/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">1</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/OTHER_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_CATCH_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_ELSE_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_WHILE_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CppFormatting/SIMPLE_EMBEDDED_STATEMENT_STYLE/@EntryValue">LINE_BREAK</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/PARENTHESES_NON_OBVIOUS_OPERATIONS/@EntryValue">Arithmetic, Shift, Relational, Equality, Bitwise, Conditional, Lowest</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_FIRST_ARG_BY_PAREN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARGUMENT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXPRESSION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALLOW_COMMENT_AFTER_LBRACE/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_CHOP_COMPOUND_DO_EXPRESSION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_CHOP_COMPOUND_WHILE_EXPRESSION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FIXED_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_USINGS_STMT/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EXPR_MEMBER_ARRANGEMENT/@EntryValue">False</s:Boolean>
	
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/LINE_FEED_AT_FILE_END/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/OTHER_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ABSTRACT_ACCESSORHOLDER_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CATCH_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ELSE_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FINALLY_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_EMBEDDED_STATEMENT_ON_SAME_LINE/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SIMPLE_EMBEDDED_STATEMENT_STYLE/@EntryValue">LINE_BREAK</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DOT_IN_METHOD_CALLS/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_FOR_STMT_HEADER_STYLE/@EntryValue">WRAP_IF_LONG</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">200</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINQ_EXPRESSIONS/@EntryValue">WRAP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_DECLARATION_STYLE/@EntryValue">WRAP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_TYPE_PARAMEER_CONSTRAINTS_STYLE/@EntryValue">WRAP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_OBJECT_AND_COLLECTION_INITIALIZER_STYLE/@EntryValue">WRAP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_TERNARY_EXPR_STYLE/@EntryValue">WRAP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;
  &lt;TypePattern DisplayName="COM interfaces" Priority="2000"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Kind Is="Interface" /&gt;
        &lt;Or&gt;
          &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;
          &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;
        &lt;/Or&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="P/Invoke structs" Priority="2000"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Or&gt;
          &lt;Kind Is="Struct" /&gt;
          &lt;Kind Is="Class" /&gt;
        &lt;/Or&gt;
        &lt;HasAttribute Name="System.Runtime.InteropServices.StructLayoutAttribute" /&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="P/Invoke classes (xxxNativeMethods)" Priority="2000"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Kind Is="Class" /&gt;
        &lt;Name Is=".*NativeMethods" /&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="DataMembers" Priority="2000"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Or&gt;
          &lt;Kind Is="Field" /&gt;
          &lt;Kind Is="Property" /&gt;
        &lt;/Or&gt;
        &lt;HasAttribute Name="System.Runtime.Serialization.DataMemberAttribute " /&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
    &lt;Region Name=" DataMembers"&gt;
      &lt;Group DisplayName="Group" /&gt;
    &lt;/Region&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" Priority="2000"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Kind Is="Class" /&gt;
        &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;
        &lt;HasAttribute Name="NUnit.Framework.TestCaseFixtureAttribute" Inherited="True" /&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Or&gt;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="All other members" /&gt;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="StyleCop Layout" RemoveRegions="AllExceptGenerated"&gt;
    &lt;TypePattern.Match&gt;
      &lt;Or&gt;
        &lt;Kind Is="Class" /&gt;
        &lt;Kind Is="Struct" /&gt;
        &lt;Kind Is="Interface" /&gt;
      &lt;/Or&gt;
    &lt;/TypePattern.Match&gt;
    &lt;Region Name="Constants"&gt;
      &lt;Entry DisplayName="Constants"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Constant" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Static fields"&gt;
      &lt;Entry DisplayName="Static fields"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Field" /&gt;
            &lt;Static /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Kind Order="Constant Field" /&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Readonly /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Constructors and destructors"&gt;
      &lt;Entry DisplayName="Constructors and destructors" Priority="200"&gt;
        &lt;Entry.Match&gt;
          &lt;Or&gt;
            &lt;Kind Is="Constructor" /&gt;
            &lt;Kind Is="Destructor" /&gt;
          &lt;/Or&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Kind Order="Constructor Destructor" /&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name=" Fields"&gt;
      &lt;Entry DisplayName="Fields"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Field" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Readonly /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name=" Delegates"&gt;
      &lt;Entry DisplayName="Delegates"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Delegate" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Public events"&gt;
      &lt;Entry DisplayName="Public events"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Event" /&gt;
            &lt;Access Is="Public" /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Interface events"&gt;
      &lt;Entry DisplayName="Interface events"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Event" /&gt;
            &lt;ImplementsInterface /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;ImplementsInterface Immediate="True" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Other events"&gt;
      &lt;Entry DisplayName="Other events"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Event" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Enums"&gt;
      &lt;Entry DisplayName="Enums"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Enum" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Interfaces"&gt;
      &lt;Entry DisplayName="Interfaces"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Interface" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Public properties"&gt;
      &lt;Entry DisplayName="Public properties"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Property" /&gt;
            &lt;Access Is="Public" /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Interface properties"&gt;
      &lt;Entry DisplayName="Interface properties"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Property" /&gt;
            &lt;ImplementsInterface /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;ImplementsInterface Immediate="True" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name=" Other properties"&gt;
      &lt;Entry DisplayName="Other properties"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Property" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Public indexers"&gt;
      &lt;Entry DisplayName="Public indexers" Priority="1000"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Indexer" /&gt;
            &lt;Access Is="Public" /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Interface indexers"&gt;
      &lt;Entry DisplayName="Interface indexers" Priority="1000"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Indexer" /&gt;
            &lt;ImplementsInterface /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;ImplementsInterface Immediate="True" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Other indexers"&gt;
      &lt;Entry DisplayName="Other indexers" Priority="1000"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Indexer" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Interface methods"&gt;
      &lt;Entry DisplayName="Interface methods"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Method" /&gt;
            &lt;ImplementsInterface /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;ImplementsInterface Immediate="True" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Public methods"&gt;
      &lt;Entry DisplayName="Public methods"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Access Is="Public" /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Internal methods"&gt;
      &lt;Entry DisplayName="Internal methods"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Access Is="Internal"/&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
 &lt;Region Name="ProtectedInternal methods"&gt;
      &lt;Entry DisplayName="ProtectedInternal methods"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Access Is="ProtectedInternal" /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
&lt;Region Name="Protected methods"&gt;
      &lt;Entry DisplayName="Protected methods"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
          &lt;Kind Is="Method" /&gt; 
          &lt;Access Is="Protected" /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
&lt;Region Name="Private methods"&gt;
      &lt;Entry DisplayName="Private methods"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Access Is="Private" /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Operators"&gt;
      &lt;Entry DisplayName="Operators"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Operator" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Nested structs"&gt;
      &lt;Entry DisplayName="Nested structs" Priority="600"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Struct" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="Nested classes"&gt;
      &lt;Entry DisplayName="Nested classes" Priority="700"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Class" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
    &lt;Region Name="All other members"&gt;
      &lt;Entry DisplayName="All other members"&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Region&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="Type Pattern" /&gt;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=CT/@EntryIndexedValue">CT</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=ID/@EntryIndexedValue">ID</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=MR/@EntryIndexedValue">MR</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=SOP/@EntryIndexedValue">SOP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=UI/@EntryIndexedValue">UI</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=VR/@EntryIndexedValue">VR</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=XY/@EntryIndexedValue">XY</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=XYZ/@EntryIndexedValue">XYZ</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=EnumMember/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="k" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="f" Suffix="" Style="AaBb"&gt;&lt;ExtraRule Prefix="" Suffix="" Style="AaBb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="f" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="fg" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="fg" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PublicFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=StaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="g" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=TypesAndNamespaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/Connection/XmlConnectionList/@EntryValue">&lt;Configurator&gt;&lt;ConnectList /&gt;&lt;/Configurator&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/ExternalSources/FirstTimeFormShown/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/Environment/ExternalSources/NavigationMode/@EntryValue">ObjectBrowser</s:String>
	<s:Boolean x:Key="/Default/Environment/ExternalSources/Decompiler/DecompileMethodBodies/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/Feedback/ShouldPrompt/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/OpenDocument/OpenDocumentAfterModification/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EFeature_002EServices_002ECpp_002ECodeStyle_002ESettingsUpgrade_002EFunctionReturnStyleSettingsUpgrader/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EFeatures_002EReSpeller_002ESettings_002EReSpellerSettingsMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAddAccessorOwnerDeclarationBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002ECSharpPlaceAttributeOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateThisQualifierSettings/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/Environment/UpdatesManger/LastUpdateCheck/@EntryValue">03/29/2021 14:21:05</s:String>
	<s:String x:Key="/Default/GlobalFilterSettingsManager/AttributeFilterXml/@EntryValue">&lt;data&gt;&lt;AttributeFilter ClassMask="System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute" IsEnabled="True" /&gt;&lt;/data&gt;</s:String>
	<s:String x:Key="/Default/Housekeeping/FeedbackReport/SelectedUserIdentificator/@EntryValue">anonymous</s:String>
	<s:Boolean x:Key="/Default/Housekeeping/GlobalSettingsUpgraded/IsUpgraded/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/Housekeeping/Layout/DialogWindows/RefactoringWizardWindow/Location/@EntryValue">-519,-343</s:String>
	<s:Boolean x:Key="/Default/Housekeeping/LiveTemplatesHousekeeping/HotspotSessionHintIsShown/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Housekeeping/RefactoringsMru/UseInline/@EntryValue">False</s:Boolean>
	<s:Double x:Key="/Default/Housekeeping/TreeModelBrowserPanelPersistence/PreviewSplitterVerticalProportion/=UnitTestSessionDescriptor/@EntryIndexedValue">1</s:Double>
	<s:Boolean x:Key="/Default/Housekeeping/UpgradeFromExceptionReport/UpgradePerformed/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=cryptomode/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=cryptostream/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Dciom/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Diagnoz/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=diagnoze/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Horiz/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Mfile/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=nlayer/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Onuchin/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Pinvoke/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Prefs/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=prev/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=pswd/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Rijndael/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Sagittal/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=tomogram/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Valeriy/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=Vert/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/ReSpeller/UserDictionaries/=en_005Fus/Words/=voxel/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/SnapshotsStore/CurrentStore/@EntryValue">C:\Documents and Settings\User\Local Settings\Application Data\JetBrains\Shared\vAny\Sessions</s:String>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=cryptomode/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=cryptostream/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Dciom/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Diagnoz/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=diagnoze/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Horiz/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Mfile/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=nlayer/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Onuchin/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Pinvoke/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Prefs/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=prev/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=pswd/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Rijndael/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Sagittal/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=tomogram/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Valeriy/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Vert/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=voxel/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>